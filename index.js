var express = require('express');

var app = express();
var toDos = [];
var notes = "";
var myName = " ";
var subscribe = " ";
var exphbs = require('express-handlebars');
var bodyParser = require('body-parser');
// var workMin = 19;
// var workSec = 59;
// var restMin = 4;
// var restSec = 0;
// var counter = 0;

app.engine('handlebars', exphbs());

//app which was generated by express to use "handlebars" as its view engine. Then
// we use view engine we set up to render a home-handlebars page which siphons
// its content to the main-handlebars page

// views: this is by default where your engine will look for the file you want to render

app.set('view engine', 'handlebars');

app.use(bodyParser.urlencoded({
  extended: false
}));
app.use(express.static("public"));
app.use(bodyParser.json());
// first need to parse the incoming data so a get method can use it.
app.use(express.urlencoded({
  extended: false
}))
app.use(express.json());
app.set('port', 5879);

//Get request: simply put it inside a variable and send it! Logic optional.


app.get('/', (req, res) => {
  res.render('index', {
    Name: "hello"
  })
});



// 2nd Page Route


app.get('/ToDoList', (req, res) => {
  res.render('ToDoList', {
    toDos: toDos
  });
})

app.post("/", function(req, res) {
  var nextToDo = req.body.ToDo;
  toDos.push(nextToDo);
  res.redirect('/ToDoList');
})



// 3rd Page Route

app.get('/Brainstorm', (req, res) => {
  res.render('Brainstorm', {
    test: "Hello"
  });
});



// 4th Page Route
app.get('/Pomodoro', (req, res) => {
  res.render('Pomodoro', {
    test: "Hello"
  });
});



// These are routes: 404, 500
app.use(function(req, res) {
  res.type('text/plain');
  res.status(404);
  res.send('404 - Not Found');
});

app.use(function(err, req, res, next) {
  console.error(err.stack);
  res.type('plain/text');
  res.status(500);
  res.send('500 - Server Error');
});




app.listen(app.get('port'), function() {
  console.log(
    // `Express started on http://${process.env.HOSTNAME}:${app.get('port')}; press Ctrl-C to terminate.`);
    'Express started on http://localhost:' + app.get('port') + '; press Ctrl-C to terminate.');
})
